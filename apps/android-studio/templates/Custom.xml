<templateSet group="Custom">
  <template name="wb" value="@dagger.Binds&#10;@dagger.multibindings.IntoMap&#10;@dagger.multibindings.ClassKey($NAME$::class)&#10;fun bind$NAME$Factory(impl: $NAME$Factory): io.plastique.core.work.ListenableWorkerFactory" description="Worker binding" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="vmb" value="@dagger.Binds&#10;@dagger.multibindings.IntoMap&#10;@dagger.multibindings.ClassKey($NAME$::class)&#10;fun bind$NAME$(impl: $NAME$): androidx.lifecycle.ViewModel" description="ViewModel binding" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="timberm" value="timber.log.Timber.d($CONTENT$)" description="Log method name and its arguments" toReformat="true" toShortenFQNames="true">
    <variable name="CONTENT" expression="groovyScript(&quot;def params = _2.collect {it + ': \$' + it}.join(', ');return '\&quot;' + _1 + '(' + (params.empty  ? '' : params) + ')\&quot;'&quot;, kotlinFunctionName(), functionParameters())" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_STATEMENT" value="true" />
    </context>
  </template>
  <template name="inject" value="@javax.inject.Inject lateinit var $NAME$" description="Field injection" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
</templateSet>